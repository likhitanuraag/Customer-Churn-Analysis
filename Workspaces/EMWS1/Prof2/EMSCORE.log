*------------------------------------------------------------*
* Score Log
Date:                October 24, 2020
Time:                18:48:55
*------------------------------------------------------------*
16499  %let EMEXCEPTIONSTRING=;
16500  *------------------------------------------------------------*;
16501  * SCORE: Prof2;
16502  *------------------------------------------------------------*;
16503  %let EM_ACTION = SCORE;
16504  %let syscc = 0;
16505  %macro main;
16506     %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
16507         options MPRINT;
16508     %end;
16509  
16510     filename temp catalog 'sashelp.emexpl.profile_macros.source';
16511     %include temp;
16512     filename temp;
16513  
16514     /* Initialize property macro variables */
16515     %SetProperties;
16516  
16517     %if %upcase(&EM_ACTION) = CREATE %then %do;
16518  
16519         filename temp catalog 'sashelp.emexpl.profile_create.source';
16520         %include temp;
16521         filename temp;
16522         %create;
16523     %end;
16524     %else
16525     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16526  
16527         filename temp catalog 'sashelp.emexpl.profile_train.source';
16528         %include temp;
16529         filename temp;
16530         %train;
16531     %end;
16532  %mend main;
16533  
16534  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
16535 +%macro SetProperties;
16536 +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
16537 +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
16538 +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
16539 +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
16540 +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
16541 +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
16542 +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
16543 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
16544 +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
16545 +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
16546 +%mend SetProperties;
16547 +
16548 +
16549 +%macro makeVarMacros(level= );
16550 +
16551 +    %let numvars = 0;
16552 +    %let where   = '';
16553 +
16554 +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16555 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
16556 +    %else
16557 +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
16558 +
16559 +    %if &level = INTERVAL %then %do;
16560 +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
16561 +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16562 +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
16563 +    %end;
16564 +    %else %do;
16565 +        %if &level = NOMINAL %then %do;
16566 +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
16567 +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
16568 +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
16569 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
16570 +             %end;
16571 +             %else
16572 +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
16573 +
16574 +        %end;
16575 +        %else %do;
16576 +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
16577 +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
16578 +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
16579 +        %end;
16580 +    %end;
16581 +
16582 +    %if &numvars>0 %then %do;
16583 +         %let numloop = %sysfunc(ceil(&numvars/10000));
16584 +         %let loopcount = 0;
16585 +
16586 +         %do %while((&numloop - &loopcount) > 0);
16587 +             %let first = %eval((&loopcount*10000) + 1);
16588 +             %let last  = %eval(&first + 10000);
16589 +             %let loopcount = %eval(&loopcount +1);
16590 +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
16591 +             filename X catalog "&centry";
16592 +             data _null_;
16593 +                length _STRING_ $80;
16594 +                retain _STRING_ ;
16595 +                file X;
16596 +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
16597 +
16598 +                where &where;
16599 +
16600 +                if _N_=1 then
16601 +                   put '%macro _PROFVAR;';
16602 +
16603 +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
16604 +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
16605 +                   if eof then do;
16606 +                      put _STRING_;
16607 +                      put '%mend _PROFVAR;';
16608 +                   end;
16609 +                end;
16610 +                else do;
16611 +                   put _STRING_;
16612 +                  _string_ = TRIM(NAME);
16613 +                   if eof then do;
16614 +                      put _string_;
16615 +                      put '%mend _PROFVAR;';
16616 +                   end;
16617 +                end;
16618 +             run;
16619 +             filename X;
16620 +         %end;
16621 +    %end;
16622 +
16623 +%mend makeVarMacros;
16624 +
16625 +
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.
16626  *------------------------------------------------------------*;
16627  * End SCORE: Prof2;
16628  *------------------------------------------------------------*;

16629  *------------------------------------------------------------*;
16630  * Prof2: Scoring DATA data;
16631  *------------------------------------------------------------*;
16632  data EMWS1.Prof2_TRAIN
16633  / view=EMWS1.Prof2_TRAIN
16634  ;
16635  set EMWS1.Clus2_TRAIN
16636  ;
16637  run;

NOTE: DATA STEP view saved on file EMWS1.PROF2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

16638  quit;

16640  *------------------------------------------------------------*;
16641  * Prof2: Computing metadata for TRAIN data;
16642  *------------------------------------------------------------*;

NOTE: View EMWS1.PROF2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      
NOTE: View EMWS1.PROF2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      

*****************************************;
*** Begin Scoring Code from PROC DMVQ ***;
*****************************************;


*** Begin Class Look-up, Standardization, Replacement ;
drop _dm_bad; _dm_bad = 0;

*** Standardize Age ;
drop T_Age ;
if missing( Age ) then T_Age = .;
else T_Age = (Age - 37.4083887981916) * 0.0987618921697;

*** Standardize Balance ;
drop T_Balance ;
if missing( Balance ) then T_Balance = .;
else T_Balance = (Balance - 72745.2967788519) * 0.00001591139499;

*** Standardize CreditScore ;
drop T_CreditScore ;
if missing( CreditScore ) then T_CreditScore = .;
else T_CreditScore = (CreditScore - 651.853196031646) * 0.01045436368127;

*** Standardize EstimatedSalary ;
drop T_EstimatedSalary ;
if missing( EstimatedSalary ) then T_EstimatedSalary = .;
else T_EstimatedSalary = (EstimatedSalary
         - 99738.3917719451) * 0.00001741990723;

*** Standardize NumOfProducts ;
drop T_NumOfProducts ;
if missing( NumOfProducts ) then T_NumOfProducts = .;
else T_NumOfProducts = (NumOfProducts - 1.54426723596634) * 1.9625716996136;

*** Standardize Tenure ;
drop T_Tenure ;
if missing( Tenure ) then T_Tenure = .;
else T_Tenure = (Tenure - 5.03327891498179) * 0.34714294064848;

*** Generate dummy variables for Country ;
drop CountryFrance CountryGermany CountrySpain ;
if missing( Country ) then do;
   CountryFrance = .;
   CountryGermany = .;
   CountrySpain = .;
end;
else do;
   length _dm7 $ 7; drop _dm7 ;
   _dm7 = put( Country , $7. );
   %DMNORMIP( _dm7 )
   if _dm7 = 'FRANCE'  then do;
      CountryFrance = 0.54590479700566;
      CountryGermany = -0.30021504918388;
      CountrySpain = -0.34148981067575;
   end;
   else if _dm7 = 'SPAIN'  then do;
      CountryFrance = -0.61053039814094;
      CountryGermany = -0.30021504918388;
      CountrySpain = 0.9759924385544;
   end;
   else if _dm7 = 'GERMANY'  then do;
      CountryFrance = -0.61053039814094;
      CountryGermany = 1.11017576889947;
      CountrySpain = -0.34148981067575;
   end;
   else do;
      CountryFrance = .;
      CountryGermany = .;
      CountrySpain = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Gender ;
drop GenderFemale GenderMale ;
if missing( Gender ) then do;
   GenderFemale = .;
   GenderMale = .;
end;
else do;
   length _dm6 $ 6; drop _dm6 ;
   _dm6 = put( Gender , $6. );
   %DMNORMIP( _dm6 )
   if _dm6 = 'MALE'  then do;
      GenderFemale = -0.61096693963673;
      GenderMale = 0.61096693963673;
   end;
   else if _dm6 = 'FEMALE'  then do;
      GenderFemale = 0.81827211451347;
      GenderMale = -0.81827211451347;
   end;
   else do;
      GenderFemale = .;
      GenderMale = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for HasCreditCard ;
drop HasCreditCardNo HasCreditCardYes ;
if missing( HasCreditCard ) then do;
   HasCreditCardNo = .;
   HasCreditCardYes = .;
end;
else do;
   length _dm3 $ 3; drop _dm3 ;
   _dm3 = put( HasCreditCard , $3. );
   %DMNORMIP( _dm3 )
   if _dm3 = 'YES'  then do;
      HasCreditCardNo = -0.45501869474632;
      HasCreditCardYes = 0.45501869474632;
   end;
   else if _dm3 = 'NO'  then do;
      HasCreditCardNo = 1.09871795459544;
      HasCreditCardYes = -1.09871795459544;
   end;
   else do;
      HasCreditCardNo = .;
      HasCreditCardYes = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for IsActiveMember ;
drop IsActiveMemberNo IsActiveMemberYes ;
if missing( IsActiveMember ) then do;
   IsActiveMemberNo = .;
   IsActiveMemberYes = .;
end;
else do;
   length _dm3 $ 3; drop _dm3 ;
   _dm3 = put( IsActiveMember , $3. );
   %DMNORMIP( _dm3 )
   if _dm3 = 'YES'  then do;
      IsActiveMemberNo = -0.63368553370186;
      IsActiveMemberYes = 0.63368553370186;
   end;
   else if _dm3 = 'NO'  then do;
      IsActiveMemberNo = 0.78893580964968;
      IsActiveMemberYes = -0.78893580964968;
   end;
   else do;
      IsActiveMemberNo = .;
      IsActiveMemberYes = .;
      _DM_BAD = 1;
   end;
end;

*** End Class Look-up, Standardization, Replacement ;


*** Omitted Cases;
if _dm_bad then do;
   _SEGMENT_ = .; Distance = .;
   goto CLUS2vlex ;
end; *** omitted;

*** Compute Distances and Cluster Membership;
label _SEGMENT_ = 'Segment Id' ;
label Distance = 'Distance' ;
array CLUS2vads [5] _temporary_;
drop _vqclus _vqmvar _vqnvar;
_vqmvar = 0;
do _vqclus = 1 to 5; CLUS2vads [_vqclus] = 0; end;
if not missing( T_Age ) then do;
   CLUS2vads [1] + ( T_Age - -0.16566993972626 )**2;
   CLUS2vads [2] + ( T_Age - 2.41294163220694 )**2;
   CLUS2vads [3] + ( T_Age - -0.21130465722278 )**2;
   CLUS2vads [4] + ( T_Age - -0.23291669457205 )**2;
   CLUS2vads [5] + ( T_Age - -0.24091362705082 )**2;
end;
else _vqmvar + 1;
if not missing( T_Balance ) then do;
   CLUS2vads [1] + ( T_Balance - 0.71946212785028 )**2;
   CLUS2vads [2] + ( T_Balance - -0.00295852920558 )**2;
   CLUS2vads [3] + ( T_Balance - -0.96596752489114 )**2;
   CLUS2vads [4] + ( T_Balance - -0.98439647571239 )**2;
   CLUS2vads [5] + ( T_Balance - 0.73455776665648 )**2;
end;
else _vqmvar + 1;
if not missing( T_CreditScore ) then do;
   CLUS2vads [1] + ( T_CreditScore - 0.13365782926011 )**2;
   CLUS2vads [2] + ( T_CreditScore - 0.01309695623595 )**2;
   CLUS2vads [3] + ( T_CreditScore - -0.20750682941408 )**2;
   CLUS2vads [4] + ( T_CreditScore - 0.12616463925761 )**2;
   CLUS2vads [5] + ( T_CreditScore - -0.09154792107335 )**2;
end;
else _vqmvar + 1;
if not missing( T_EstimatedSalary ) then do;
   CLUS2vads [1] + ( T_EstimatedSalary - 0.05544661121169 )**2;
   CLUS2vads [2] + ( T_EstimatedSalary - -0.08001454681391 )**2;
   CLUS2vads [3] + ( T_EstimatedSalary - -0.038002677383 )**2;
   CLUS2vads [4] + ( T_EstimatedSalary - 0.02381853982681 )**2;
   CLUS2vads [5] + ( T_EstimatedSalary - -0.01185261889904 )**2;
end;
else _vqmvar + 1;
if not missing( T_NumOfProducts ) then do;
   CLUS2vads [1] + ( T_NumOfProducts - -0.48911989655704 )**2;
   CLUS2vads [2] + ( T_NumOfProducts - -0.11324052795531 )**2;
   CLUS2vads [3] + ( T_NumOfProducts - 0.70136838597288 )**2;
   CLUS2vads [4] + ( T_NumOfProducts - 0.68556703487007 )**2;
   CLUS2vads [5] + ( T_NumOfProducts - -0.49923364531991 )**2;
end;
else _vqmvar + 1;
if not missing( T_Tenure ) then do;
   CLUS2vads [1] + ( T_Tenure - -0.07956087417821 )**2;
   CLUS2vads [2] + ( T_Tenure - 0.01798051573635 )**2;
   CLUS2vads [3] + ( T_Tenure - 0.01272849587742 )**2;
   CLUS2vads [4] + ( T_Tenure - 0.0699052846824 )**2;
   CLUS2vads [5] + ( T_Tenure - -0.02623568404652 )**2;
end;
else _vqmvar + 1;
if not missing( CountryFrance ) then do;
   CLUS2vads [1] + ( CountryFrance - -0.1110159039352 )**2;
   CLUS2vads [2] + ( CountryFrance - -0.0150525737744 )**2;
   CLUS2vads [3] + ( CountryFrance - 0.1566348078197 )**2;
   CLUS2vads [4] + ( CountryFrance - 0.13150237145971 )**2;
   CLUS2vads [5] + ( CountryFrance - -0.09673594417622 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( CountryGermany ) then do;
   CLUS2vads [1] + ( CountryGermany - 0.172504453966 )**2;
   CLUS2vads [2] + ( CountryGermany - -0.02024194648972 )**2;
   CLUS2vads [3] + ( CountryGermany - -0.25859695946995 )**2;
   CLUS2vads [4] + ( CountryGermany - -0.24954616576933 )**2;
   CLUS2vads [5] + ( CountryGermany - 0.19933878253065 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( CountrySpain ) then do;
   CLUS2vads [1] + ( CountrySpain - -0.03466467631531 )**2;
   CLUS2vads [2] + ( CountrySpain - 0.03605734134243 )**2;
   CLUS2vads [3] + ( CountrySpain - 0.06311402761241 )**2;
   CLUS2vads [4] + ( CountrySpain - 0.08329186949895 )**2;
   CLUS2vads [5] + ( CountrySpain - -0.07599992138797 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( GenderFemale ) then do;
   CLUS2vads [1] + ( GenderFemale - 0.00638336778141 )**2;
   CLUS2vads [2] + ( GenderFemale - -0.00514023608649 )**2;
   CLUS2vads [3] + ( GenderFemale - 0.01227500856647 )**2;
   CLUS2vads [4] + ( GenderFemale - 0.01818422199009 )**2;
   CLUS2vads [5] + ( GenderFemale - -0.01921872051814 )**2;
end;
else _vqmvar + 0.5;
if not missing( GenderMale ) then do;
   CLUS2vads [1] + ( GenderMale - -0.00638336778141 )**2;
   CLUS2vads [2] + ( GenderMale - 0.00514023608649 )**2;
   CLUS2vads [3] + ( GenderMale - -0.01227500856647 )**2;
   CLUS2vads [4] + ( GenderMale - -0.01818422199009 )**2;
   CLUS2vads [5] + ( GenderMale - 0.01921872051814 )**2;
end;
else _vqmvar + 0.5;
if not missing( HasCreditCardNo ) then do;
   CLUS2vads [1] + ( HasCreditCardNo - 1.09871795459546 )**2;
   CLUS2vads [2] + ( HasCreditCardNo - -0.08861512669259 )**2;
   CLUS2vads [3] + ( HasCreditCardNo - 1.07834108050573 )**2;
   CLUS2vads [4] + ( HasCreditCardNo - -0.4550186947463 )**2;
   CLUS2vads [5] + ( HasCreditCardNo - -0.4550186947463 )**2;
end;
else _vqmvar + 0.5;
if not missing( HasCreditCardYes ) then do;
   CLUS2vads [1] + ( HasCreditCardYes - -1.09871795459546 )**2;
   CLUS2vads [2] + ( HasCreditCardYes - 0.08861512669259 )**2;
   CLUS2vads [3] + ( HasCreditCardYes - -1.07834108050573 )**2;
   CLUS2vads [4] + ( HasCreditCardYes - 0.4550186947463 )**2;
   CLUS2vads [5] + ( HasCreditCardYes - 0.4550186947463 )**2;
end;
else _vqmvar + 0.5;
if not missing( IsActiveMemberNo ) then do;
   CLUS2vads [1] + ( IsActiveMemberNo - -0.00800077293591 )**2;
   CLUS2vads [2] + ( IsActiveMemberNo - -0.58484927863158 )**2;
   CLUS2vads [3] + ( IsActiveMemberNo - 0.12660062684339 )**2;
   CLUS2vads [4] + ( IsActiveMemberNo - 0.05724652391498 )**2;
   CLUS2vads [5] + ( IsActiveMemberNo - 0.05512149911759 )**2;
end;
else _vqmvar + 0.5;
if not missing( IsActiveMemberYes ) then do;
   CLUS2vads [1] + ( IsActiveMemberYes - 0.00800077293591 )**2;
   CLUS2vads [2] + ( IsActiveMemberYes - 0.58484927863158 )**2;
   CLUS2vads [3] + ( IsActiveMemberYes - -0.12660062684339 )**2;
   CLUS2vads [4] + ( IsActiveMemberYes - -0.05724652391498 )**2;
   CLUS2vads [5] + ( IsActiveMemberYes - -0.05512149911759 )**2;
end;
else _vqmvar + 0.5;
_vqnvar = 10 - _vqmvar;
if _vqnvar <= 1.7053025658242E-11 then do;
   _SEGMENT_ = .; Distance = .;
end;
else do;
   _SEGMENT_ = 1; Distance = CLUS2vads [1];
   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
   do _vqclus = 2 to 5;
      if CLUS2vads [_vqclus] < _vqfzdst then do;
         _SEGMENT_ = _vqclus; Distance = CLUS2vads [_vqclus];
         _vqfzdst = Distance * 0.99999999999988;
      end;
   end;
   Distance = sqrt(Distance * (10 / _vqnvar));
end;
CLUS2vlex :;

***************************************;
*** End Scoring Code from PROC DMVQ ***;
***************************************;
*------------------------------------------------------------*;
* Clus2: Creating Segment Label;
*------------------------------------------------------------*;
length _SEGMENT_LABEL_ $80;
label _SEGMENT_LABEL_='Segment Description';
if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
else
if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
else
if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
else
if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
else
if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";

*****************************************;
*** Begin Scoring Code from PROC DMVQ ***;
*****************************************;


*** Begin Class Look-up, Standardization, Replacement ;
drop _dm_bad; _dm_bad = 0;

*** Standardize Age ;
drop T_Age ;
if missing( Age ) then T_Age = .;
else T_Age = (Age - 37.3486697045421) * 0.09926078075696;

*** Standardize Balance ;
drop T_Balance ;
if missing( Balance ) then T_Balance = .;
else T_Balance = (Balance - 73061.5528869617) * 0.00001588092652;

*** Standardize CreditScore ;
drop T_CreditScore ;
if missing( CreditScore ) then T_CreditScore = .;
else T_CreditScore = (CreditScore - 651.549022490078) * 0.01042994811318;

*** Standardize EstimatedSalary ;
drop T_EstimatedSalary ;
if missing( EstimatedSalary ) then T_EstimatedSalary = .;
else T_EstimatedSalary = (EstimatedSalary
         - 99793.9284227545) * 0.00001741903921;

*** Standardize NumOfProducts ;
drop T_NumOfProducts ;
if missing( NumOfProducts ) then T_NumOfProducts = .;
else T_NumOfProducts = (NumOfProducts - 1.54240776128178) * 1.96227379743286;

*** Standardize Tenure ;
drop T_Tenure ;
if missing( Tenure ) then T_Tenure = .;
else T_Tenure = (Tenure - 4.29972071145083) * 0.40890070825491;

*** Generate dummy variables for Country ;
drop CountryFrance CountryGermany CountrySpain ;
if missing( Country ) then do;
   CountryFrance = .;
   CountryGermany = .;
   CountrySpain = .;
end;
else do;
   length _dm7 $ 7; drop _dm7 ;
   _dm7 = put( Country , $7. );
   %DMNORMIP( _dm7 )
   if _dm7 = 'FRANCE'  then do;
      CountryFrance = 0.5456716093712;
      CountryGermany = -0.29822455780832;
      CountrySpain = -0.3432732191203;
   end;
   else if _dm7 = 'SPAIN'  then do;
      CountryFrance = -0.6107782219535;
      CountryGermany = -0.29822455780832;
      CountrySpain = 0.9709010688231;
   end;
   else if _dm7 = 'GERMANY'  then do;
      CountryFrance = -0.6107782219535;
      CountryGermany = 1.11756167161947;
      CountrySpain = -0.3432732191203;
   end;
   else do;
      CountryFrance = .;
      CountryGermany = .;
      CountrySpain = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for Gender ;
drop GenderFemale GenderMale ;
if missing( Gender ) then do;
   GenderFemale = .;
   GenderMale = .;
end;
else do;
   length _dm6 $ 6; drop _dm6 ;
   _dm6 = put( Gender , $6. );
   %DMNORMIP( _dm6 )
   if _dm6 = 'MALE'  then do;
      GenderFemale = -0.61185501232938;
      GenderMale = 0.61185501232938;
   end;
   else if _dm6 = 'FEMALE'  then do;
      GenderFemale = 0.81706694059776;
      GenderMale = -0.81706694059776;
   end;
   else do;
      GenderFemale = .;
      GenderMale = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for HasCreditCard ;
drop HasCreditCardNo HasCreditCardYes ;
if missing( HasCreditCard ) then do;
   HasCreditCardNo = .;
   HasCreditCardYes = .;
end;
else do;
   length _dm3 $ 3; drop _dm3 ;
   _dm3 = put( HasCreditCard , $3. );
   %DMNORMIP( _dm3 )
   if _dm3 = 'YES'  then do;
      HasCreditCardNo = -0.45432132763227;
      HasCreditCardYes = 0.45432132763227;
   end;
   else if _dm3 = 'NO'  then do;
      HasCreditCardNo = 1.10038088156409;
      HasCreditCardYes = -1.10038088156409;
   end;
   else do;
      HasCreditCardNo = .;
      HasCreditCardYes = .;
      _DM_BAD = 1;
   end;
end;

*** Generate dummy variables for IsActiveMember ;
drop IsActiveMemberNo IsActiveMemberYes ;
if missing( IsActiveMember ) then do;
   IsActiveMemberNo = .;
   IsActiveMemberYes = .;
end;
else do;
   length _dm3 $ 3; drop _dm3 ;
   _dm3 = put( IsActiveMember , $3. );
   %DMNORMIP( _dm3 )
   if _dm3 = 'YES'  then do;
      IsActiveMemberNo = -0.62948604442221;
      IsActiveMemberYes = 0.62948604442221;
   end;
   else if _dm3 = 'NO'  then do;
      IsActiveMemberNo = 0.79418202745422;
      IsActiveMemberYes = -0.79418202745422;
   end;
   else do;
      IsActiveMemberNo = .;
      IsActiveMemberYes = .;
      _DM_BAD = 1;
   end;
end;

*** End Class Look-up, Standardization, Replacement ;


*** Omitted Cases;
if _dm_bad then do;
   _SEGMENT_ = .; Distance = .;
   goto CLUS3vlex ;
end; *** omitted;

*** Compute Distances and Cluster Membership;
label _SEGMENT_ = 'Segment Id' ;
label Distance = 'Distance' ;
array CLUS3vads [5] _temporary_;
drop _vqclus _vqmvar _vqnvar;
_vqmvar = 0;
do _vqclus = 1 to 5; CLUS3vads [_vqclus] = 0; end;
if not missing( T_Age ) then do;
   CLUS3vads [1] + ( T_Age - -0.22109399278566 )**2;
   CLUS3vads [2] + ( T_Age - 2.37562453586545 )**2;
   CLUS3vads [3] + ( T_Age - -0.20869514120168 )**2;
   CLUS3vads [4] + ( T_Age - -0.1927097919727 )**2;
   CLUS3vads [5] + ( T_Age - -0.26870501947878 )**2;
end;
else _vqmvar + 1;
if not missing( T_Balance ) then do;
   CLUS3vads [1] + ( T_Balance - 0.67620159309638 )**2;
   CLUS3vads [2] + ( T_Balance - -0.05799203913972 )**2;
   CLUS3vads [3] + ( T_Balance - 0.55845836120091 )**2;
   CLUS3vads [4] + ( T_Balance - -0.42813165274001 )**2;
   CLUS3vads [5] + ( T_Balance - -0.76703639383354 )**2;
end;
else _vqmvar + 1;
if not missing( T_CreditScore ) then do;
   CLUS3vads [1] + ( T_CreditScore - 0.08413911593443 )**2;
   CLUS3vads [2] + ( T_CreditScore - 0.00082564378288 )**2;
   CLUS3vads [3] + ( T_CreditScore - -0.13200233397635 )**2;
   CLUS3vads [4] + ( T_CreditScore - 0.28150771736911 )**2;
   CLUS3vads [5] + ( T_CreditScore - -0.2071895978559 )**2;
end;
else _vqmvar + 1;
if not missing( T_EstimatedSalary ) then do;
   CLUS3vads [1] + ( T_EstimatedSalary - 0.07743237765037 )**2;
   CLUS3vads [2] + ( T_EstimatedSalary - -0.09808287200863 )**2;
   CLUS3vads [3] + ( T_EstimatedSalary - -0.12747463353498 )**2;
   CLUS3vads [4] + ( T_EstimatedSalary - 0.3546663718626 )**2;
   CLUS3vads [5] + ( T_EstimatedSalary - -0.22910942813794 )**2;
end;
else _vqmvar + 1;
if not missing( T_NumOfProducts ) then do;
   CLUS3vads [1] + ( T_NumOfProducts - -0.80722700541004 )**2;
   CLUS3vads [2] + ( T_NumOfProducts - -0.02491378570639 )**2;
   CLUS3vads [3] + ( T_NumOfProducts - -0.81567399360304 )**2;
   CLUS3vads [4] + ( T_NumOfProducts - 0.82849785483766 )**2;
   CLUS3vads [5] + ( T_NumOfProducts - 0.81101402882366 )**2;
end;
else _vqmvar + 1;
if not missing( T_Tenure ) then do;
   CLUS3vads [1] + ( T_Tenure - -0.20762615854049 )**2;
   CLUS3vads [2] + ( T_Tenure - 0.03433967652659 )**2;
   CLUS3vads [3] + ( T_Tenure - 0.21725149654314 )**2;
   CLUS3vads [4] + ( T_Tenure - -0.51167596316201 )**2;
   CLUS3vads [5] + ( T_Tenure - 0.43789530921442 )**2;
end;
else _vqmvar + 1;
if not missing( CountryFrance ) then do;
   CLUS3vads [1] + ( CountryFrance - -0.04252270138877 )**2;
   CLUS3vads [2] + ( CountryFrance - -0.02371795104333 )**2;
   CLUS3vads [3] + ( CountryFrance - -0.02370937094598 )**2;
   CLUS3vads [4] + ( CountryFrance - 0.02046803976597 )**2;
   CLUS3vads [5] + ( CountryFrance - 0.05370868578901 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( CountryGermany ) then do;
   CLUS3vads [1] + ( CountryGermany - 0.0947781713949 )**2;
   CLUS3vads [2] + ( CountryGermany - -0.03141255192295 )**2;
   CLUS3vads [3] + ( CountryGermany - 0.07402513543525 )**2;
   CLUS3vads [4] + ( CountryGermany - 0.00435502624267 )**2;
   CLUS3vads [5] + ( CountryGermany - -0.14806541226295 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( CountrySpain ) then do;
   CLUS3vads [1] + ( CountrySpain - -0.03965364225062 )**2;
   CLUS3vads [2] + ( CountrySpain - 0.05611081745332 )**2;
   CLUS3vads [3] + ( CountrySpain - -0.04176928561544 )**2;
   CLUS3vads [4] + ( CountrySpain - -0.02730207263282 )**2;
   CLUS3vads [5] + ( CountrySpain - 0.07640481688959 )**2;
end;
else _vqmvar + 0.33333333333333;
if not missing( GenderFemale ) then do;
   CLUS3vads [1] + ( GenderFemale - -0.57325769521006 )**2;
   CLUS3vads [2] + ( GenderFemale - -0.08055805529874 )**2;
   CLUS3vads [3] + ( GenderFemale - 0.75046023630984 )**2;
   CLUS3vads [4] + ( GenderFemale - 0.32803516753822 )**2;
   CLUS3vads [5] + ( GenderFemale - -0.25628993429914 )**2;
end;
else _vqmvar + 0.5;
if not missing( GenderMale ) then do;
   CLUS3vads [1] + ( GenderMale - 0.57325769521006 )**2;
   CLUS3vads [2] + ( GenderMale - 0.08055805529874 )**2;
   CLUS3vads [3] + ( GenderMale - -0.75046023630984 )**2;
   CLUS3vads [4] + ( GenderMale - -0.32803516753822 )**2;
   CLUS3vads [5] + ( GenderMale - 0.25628993429914 )**2;
end;
else _vqmvar + 0.49999999999999;
if not missing( HasCreditCardNo ) then do;
   CLUS3vads [1] + ( HasCreditCardNo - -0.02275743852776 )**2;
   CLUS3vads [2] + ( HasCreditCardNo - -0.01087485709748 )**2;
   CLUS3vads [3] + ( HasCreditCardNo - -0.04101739000906 )**2;
   CLUS3vads [4] + ( HasCreditCardNo - 0.41900597832784 )**2;
   CLUS3vads [5] + ( HasCreditCardNo - -0.27855662566018 )**2;
end;
else _vqmvar + 0.5;
if not missing( HasCreditCardYes ) then do;
   CLUS3vads [1] + ( HasCreditCardYes - 0.02275743852776 )**2;
   CLUS3vads [2] + ( HasCreditCardYes - 0.01087485709748 )**2;
   CLUS3vads [3] + ( HasCreditCardYes - 0.04101739000906 )**2;
   CLUS3vads [4] + ( HasCreditCardYes - -0.41900597832784 )**2;
   CLUS3vads [5] + ( HasCreditCardYes - 0.27855662566018 )**2;
end;
else _vqmvar + 0.5;
if not missing( IsActiveMemberNo ) then do;
   CLUS3vads [1] + ( IsActiveMemberNo - 0.1216215934988 )**2;
   CLUS3vads [2] + ( IsActiveMemberNo - -0.59081254841198 )**2;
   CLUS3vads [3] + ( IsActiveMemberNo - -0.02393458486224 )**2;
   CLUS3vads [4] + ( IsActiveMemberNo - -0.14122443132379 )**2;
   CLUS3vads [5] + ( IsActiveMemberNo - 0.21260200508511 )**2;
end;
else _vqmvar + 0.5;
if not missing( IsActiveMemberYes ) then do;
   CLUS3vads [1] + ( IsActiveMemberYes - -0.1216215934988 )**2;
   CLUS3vads [2] + ( IsActiveMemberYes - 0.59081254841198 )**2;
   CLUS3vads [3] + ( IsActiveMemberYes - 0.02393458486224 )**2;
   CLUS3vads [4] + ( IsActiveMemberYes - 0.14122443132379 )**2;
   CLUS3vads [5] + ( IsActiveMemberYes - -0.21260200508511 )**2;
end;
else _vqmvar + 0.5;
_vqnvar = 10 - _vqmvar;
if _vqnvar <= 1.7053025658242E-11 then do;
   _SEGMENT_ = .; Distance = .;
end;
else do;
   _SEGMENT_ = 1; Distance = CLUS3vads [1];
   _vqfzdst = Distance * 0.99999999999988; drop _vqfzdst;
   do _vqclus = 2 to 5;
      if CLUS3vads [_vqclus] < _vqfzdst then do;
         _SEGMENT_ = _vqclus; Distance = CLUS3vads [_vqclus];
         _vqfzdst = Distance * 0.99999999999988;
      end;
   end;
   Distance = sqrt(Distance * (10 / _vqnvar));
end;
CLUS3vlex :;

***************************************;
*** End Scoring Code from PROC DMVQ ***;
***************************************;
